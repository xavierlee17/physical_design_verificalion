关于 Originalsin 项目

作者 李秋贤（Xavier-Studio）

1.背景：由于中美贸易战，EDA资源日发紧张。由于中国IC设计公司普遍资源浪费严重且日益严重，所以开发一套 Layout to Verification 资源管理软件很有必要。
2.目的：想提高全中国的IC设计公司迭代效率、出货效率，降低人力成本，让工程师回归工程。
3.需求：
	1.简化 Layout to Verification 流程，提高人均生产效率和 Layout迭代效率。
	2.简化 Verification to TapeOut 流程，提高出货效率。
	3.简化 TapeOut to Document 流程，保证关键数据获得，提高数据获取完整性。
	4.简化 Document to Analysis 流程，减少人力分析成本投入。
4.开发与支持环境：Red Hat 5+，CentOS 6+，Ubuntu 14+，Debian 7+。
5.支持的EDA工具 ：Virtuoso Calibre Laker Aether(华大九天Layout Editor) Argus(华大九天Layout验证工具) Skipper（华大九天GDS/OASIS/LEF编辑工具）StarRC QRC ICEANDFIRE
6.开发语言与工具：Bash，Perl，Tcl，QT，Python，Shc。
7.开发流程：
	第一阶段：全方位建立脚本环境，建立 Tyrion 脚本环境体系（后台自动多线程资源调配，脚本管理，LSF管理，License管理）。
	第二阶段：围绕 Tyrion 脚本环境体系，建立 JonSnow 界面体系，即GUI 界面体系。
	第三阶段：围绕 Tyrion 脚本环境体系和 JonSnow 界面体系，打造 Varys 后台体系，即后台 Tapeout 及其他 数据收集体系，以及情报分析。
	第四阶段：全方位测试软件，优化资源调配，优化数据收集，优化情报分析，加密一切需要加密的内容，发布消息等。（Baelish系统）
	第五阶段：建立数据库，收集大数据（Bran系统）
	第六阶段：实际项目试运作，数据整合，继续优化资源调配，加密、封装源码。（Sansa系统）
	第七阶段：商业运作（？）
8.开发进程大纲：
	1.	Rule File管理系统(Tyrion)
	2.	Layout/Schematic Editor to database 管理系统(Tyrion)
	3.	DRC运作系统(Tyrion)
	4.	LVS运作系统(Tyrion)
	5.	PERC运作系统(Tyrion)
	6.	多线程异步运作系统(Tyrion)
	7.	Tapeout强制验证运作系统(Tyrion)
	8.	EDA运行占用系统资源研究以及License使用情况研究(必要)
	9.	Local机器与LSF资源管理系统(Tyrion)
	10.	GUI界面(JonSnow)
	11.	RC抽取与数据保存机制(Varys)
	12.	Tapeout管理系统(Varys)
	13.	关键数据获得系统(Baelish)
	14.	关键数据分析系统(Baelish)
	15.	数据库(Bran)
	16.	数据整合系统(Sansa)
	17.	测试，整理，优化细节
	18.	程序加密和封装
9.研究新设想：
	1.	尝试并入SSD硬盘做运行盘，突破EDA（主要是Calibre和Argus）运行时的读写瓶颈(必要，且需要IT部门帮忙)
	2.	尝试尝试使用内存做存储空间，突破EDA（主要是Calibre和Argus）运行时的读写瓶颈(未知在Linux下可否成功，需要IT部门帮忙)
	3.	尝试优化Rule File和其他脚本的存放结构，目标是以一人之力（最多4人）就可以管理所有团队的验证必要文件
10.关于Calibre Rule File：
	1.	尝试把零散，分散的Rule File存放系统重构
11.人力成本预计（按每天至少12小时算）
	8.1 ~8.10，1人，3个月
	8.11~8.15，2人，2个月 （尤其是数据库的创建、优化需要帮忙）
	8.16~8.18, 2人，1个月
12.牵涉部门
	IT（LSF）,EDA（需要调配以及license管理）,CAD（难点需要支持）
